C251 COMPILER V5.60.0,  lcd_init                                                           29/11/24  15:02:27  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE lcd_init
OBJECT MODULE PLACED IN lcd_init.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE HARDWARE\LCD\lcd_init.c XSMALL INTR2 BROWSE INCDIR(.\HARDWARE\LCD) DEB
                    -UG PRINT(.\lcd_init.lst) OBJECT(lcd_init.obj) 

stmt  level    source

    1          #include "lcd_init.h"
    2          #include "stdio.h"
    3          
    4          /**
    5           * @brief       非准确毫秒延时
    6           * @param       ms:要延时的时间
    7           * @retval      无
    8           */
    9          void delay_ms(uint16_t ms)
   10          {
   11   1          uint16_t i;
   12   1          do{
   13   2                i = MAIN_Fosc / 6000;
   14   2                while(--i);
   15   2           }while(--ms);
   16   1      }
   17          
   18          /**
   19           * @brief       设置光标位置
   20           * @param       x:坐标列地址
   21           * @param       y:坐标行地址
   22           * @retval      无
   23           */
   24          void LCD_SetCursor(uint16_t x, uint16_t y)
   25          {
   26   1          LCD_Address_Set(x, y, x, y);
   27   1      }
   28          
   29          /**
   30           * @brief       设置显示窗口
   31           * @param       xs:窗口列起始地址
   32           * @param       ys:坐标行起始地址
   33           * @param       xe:窗口列结束地址
   34           * @param       ye:坐标行结束地址
   35           * @retval      无
   36           */
   37          void LCD_Address_Set(uint16_t xs, uint16_t ys, uint16_t xe, uint16_t ye)
   38          {
   39   1          if(USE_HORIZONTAL==0)
   40   1          {
   41   2              LCD_WR_REG(0x2a);//列地址设置
   42   2              LCD_WR_DATA(xs+0x52);
   43   2              LCD_WR_DATA(xe+0x52);
   44   2              LCD_WR_REG(0x2b);//行地址设置
   45   2              LCD_WR_DATA(ys+0x12);
   46   2              LCD_WR_DATA(ye+0x12);
   47   2              LCD_WR_REG(0x2c);//储存器写
   48   2          }
   49   1          else if(USE_HORIZONTAL==1)
   50   1          {
   51   2              LCD_WR_REG(0x2a);//列地址设置
   52   2              LCD_WR_DATA(xs+0x52);
   53   2              LCD_WR_DATA(xe+0x52);
   54   2              LCD_WR_REG(0x2b);//行地址设置
   55   2              LCD_WR_DATA(ys+0x12);
   56   2              LCD_WR_DATA(ye+0x12);
   57   2              LCD_WR_REG(0x2c);//储存器写
   58   2          }
C251 COMPILER V5.60.0,  lcd_init                                                           29/11/24  15:02:27  PAGE 2   

   59   1          else if(USE_HORIZONTAL==2)
   60   1          {
   61   2              LCD_WR_REG(0x2a);//列地址设置
   62   2              LCD_WR_DATA(xs+0x12);
   63   2              LCD_WR_DATA(xe+0x12);
   64   2              LCD_WR_REG(0x2b);//行地址设置
   65   2              LCD_WR_DATA(ys+0x52);
   66   2              LCD_WR_DATA(ye+0x52);
   67   2              LCD_WR_REG(0x2c);//储存器写
   68   2          }
   69   1          else
   70   1          {
   71   2              LCD_WR_REG(0x2a);//列地址设置
   72   2              LCD_WR_DATA(xs+0x12);
   73   2              LCD_WR_DATA(xe+0x12);
   74   2              LCD_WR_REG(0x2b);//行地址设置
   75   2              LCD_WR_DATA(ys+0x52);
   76   2              LCD_WR_DATA(ye+0x52);
   77   2              LCD_WR_REG(0x2c);//储存器写
   78   2          }
   79   1      }
   80          /**
   81           * @brief       指定颜色填充区域
   82           * @param       xs:填充区域列起始地址
   83           * @param       ys:填充区域行起始地址
   84           * @param       xe:填充区域列结束地址
   85           * @param       ye:填充区域行结束地址
   86           * @param       color:填充颜色值
   87           * @retval      无
   88           */
   89          void LCD_Fill(uint16_t xs, uint16_t ys, uint16_t xe, uint16_t ye, uint16_t color)
   90          {
   91   1          uint16_t i, j;
   92   1          LCD_Address_Set(xs, ys, xe - 1, ye - 1);
   93   1          for (j = ys; j < ye; j++)
   94   1          {
   95   2              for (i = xs; i < xe; i++)
   96   2              {
   97   3                  LCD_WR_DATA(color);
   98   3              }
   99   2          }
  100   1      }
  101          
  102          /**
  103           * @brief       初始化LCD
  104           * @param       无
  105           * @retval      无
  106           */
  107          void LCD_Init(void)
  108          {
  109   1          LCD_GPIOInit();
  110   1          LCD_RES_Set();
  111   1          delay_ms(20);
  112   1          LCD_RES_Clr();
  113   1          delay_ms(200);
  114   1          LCD_RES_Set();
  115   1          delay_ms(120);
  116   1          LCD_BLK_Set();
  117   1      
  118   1          LCD_WR_REG(0x11);
  119   1          delay_ms(120);
  120   1      
  121   1          LCD_WR_REG(0xB2);
  122   1          LCD_WR_DATA8(0x0C);
  123   1          LCD_WR_DATA8(0x0C);
  124   1          LCD_WR_DATA8(0x00);
C251 COMPILER V5.60.0,  lcd_init                                                           29/11/24  15:02:27  PAGE 3   

  125   1          LCD_WR_DATA8(0x33);
  126   1          LCD_WR_DATA8(0x33);
  127   1      
  128   1          LCD_WR_REG(0xB0);
  129   1          LCD_WR_DATA8(0x00);
  130   1          LCD_WR_DATA8(0xE0);
  131   1      
  132   1          LCD_WR_REG(0x36);
  133   1          if(USE_HORIZONTAL==0)LCD_WR_DATA8(0x00);
  134   1          else if(USE_HORIZONTAL==1)LCD_WR_DATA8(0xC0);
  135   1          else if(USE_HORIZONTAL==2)LCD_WR_DATA8(0x70);
  136   1          else LCD_WR_DATA8(0xA0);
  137   1      
  138   1          LCD_WR_REG(0x3A);
  139   1          LCD_WR_DATA8(0x05);
  140   1      
  141   1          LCD_WR_REG(0xB7);
  142   1          LCD_WR_DATA8(0x45);
  143   1      
  144   1          LCD_WR_REG(0xBB);
  145   1          LCD_WR_DATA8(0x1D);
  146   1      
  147   1          LCD_WR_REG(0xC0);
  148   1          LCD_WR_DATA8(0x2C);
  149   1      
  150   1          LCD_WR_REG(0xC2);
  151   1          LCD_WR_DATA8(0x01);
  152   1      
  153   1          LCD_WR_REG(0xC3);
  154   1          LCD_WR_DATA8(0x19);
  155   1      
  156   1          LCD_WR_REG(0xC4);
  157   1          LCD_WR_DATA8(0x20);
  158   1      
  159   1          LCD_WR_REG(0xC6);
  160   1          LCD_WR_DATA8(0x0F);
  161   1      
  162   1          LCD_WR_REG(0xD0);
  163   1          LCD_WR_DATA8(0xA4);
  164   1          LCD_WR_DATA8(0xA1);
  165   1      
  166   1          LCD_WR_REG(0xD6);
  167   1          LCD_WR_DATA8(0xA1);
  168   1      
  169   1          LCD_WR_REG(0xE0);
  170   1          LCD_WR_DATA8(0xD0);
  171   1          LCD_WR_DATA8(0x10);
  172   1          LCD_WR_DATA8(0x21);
  173   1          LCD_WR_DATA8(0x14);
  174   1          LCD_WR_DATA8(0x15);
  175   1          LCD_WR_DATA8(0x2D);
  176   1          LCD_WR_DATA8(0x41);
  177   1          LCD_WR_DATA8(0x44);
  178   1          LCD_WR_DATA8(0x4F);
  179   1          LCD_WR_DATA8(0x28);
  180   1          LCD_WR_DATA8(0x0E);
  181   1          LCD_WR_DATA8(0x0C);
  182   1          LCD_WR_DATA8(0x1D);
  183   1          LCD_WR_DATA8(0x1F);
  184   1      
  185   1          LCD_WR_REG(0xE1);
  186   1          LCD_WR_DATA8(0xD0);
  187   1          LCD_WR_DATA8(0x0F);
  188   1          LCD_WR_DATA8(0x1B);
  189   1          LCD_WR_DATA8(0x0D);
  190   1          LCD_WR_DATA8(0x0D);
C251 COMPILER V5.60.0,  lcd_init                                                           29/11/24  15:02:27  PAGE 4   

  191   1          LCD_WR_DATA8(0x26);
  192   1          LCD_WR_DATA8(0x42);
  193   1          LCD_WR_DATA8(0x54);
  194   1          LCD_WR_DATA8(0x50);
  195   1          LCD_WR_DATA8(0x3E);
  196   1          LCD_WR_DATA8(0x1A);
  197   1          LCD_WR_DATA8(0x18);
  198   1          LCD_WR_DATA8(0x22);
  199   1          LCD_WR_DATA8(0x25);
  200   1          LCD_WR_REG(0x11);
  201   1          delay_ms(120);
  202   1          LCD_WR_REG(0x29);
  203   1      
  204   1      }
  205          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       550     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------         14
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
